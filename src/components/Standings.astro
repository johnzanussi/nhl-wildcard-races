---
import { getWildCardStandings } from '@/data/Standings.ts';
import TeamCard from '@/components/Team/Card.astro';
import Divider from '@/components/Divider.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';

const standings = await getWildCardStandings();
---
<div class="flex my-4 lg:my-8 items-center justify-between">

    <div
        class="tabs tabs-lg tabs-box md:w-1/2"
        role="tablist"
    >

        {Object.entries(standings).map(([, conf]) => {

            const label = conf.label;
            const confLower = label.toLowerCase();

            return (
                <a
                    role="tab"
                    class="tab grow tab-conference"
                    data-conference={confLower}
                    href={`/${confLower}`}>
                    {label}
                </a>
            );

        })}

    </div>

    <div>
        <label class="label text-sm">
            <input
                name="toggle-playoff-teams"
                type="checkbox"
                class="toggle toggle-sm"
            />
            Show Playoff Teams
        </label>
    </div>


    <ThemeToggle />

</div>

{Object.entries(standings).map(([, conf]) => {

    let teamCount = 0;

    return (

        <div
            class="tab-panel w-full overflow-x-auto"
            data-tab={conf.label.toLowerCase()}
        >
            {conf.teams.map((team) => {
                teamCount++;

                return (
                    <>
                        <TeamCard team={team} />

                        {teamCount === 6 && (
                            <Divider class="divider-accent playoff-team">
                                Wild Card
                            </Divider>
                        )}

                        {teamCount === 8 && (
                            <Divider class="divider-error">
                                No Playoffs
                            </Divider>
                        )}

                    </>
                );
            })}
        </div>
    );

})}
