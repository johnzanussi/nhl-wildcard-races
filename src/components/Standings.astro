---
import { getConfStandings, getConferences, type ConferenceKey } from '@/data/Standings.ts';
import TeamCard from '@/components/Team/Card.astro';
import Divider from '@/components/Divider.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';

type Props = {
    conference?: ConferenceKey;
    isPlayoffs?: boolean;
};

const {
    conference = 'east',
    isPlayoffs = false,
} = Astro.props;

const confStandings = await getConfStandings(conference, isPlayoffs);

let teamCount = 0;
---
<div class="flex my-4 lg:my-8 items-center justify-between">

    <div
        class="tabs tabs-lg tabs-box md:w-1/2"
        role="tablist"
    >

        {getConferences().map(({ label, key }) => {
            return (
                <a
                    role="tab"
                    class:list={['tab grow', {
                        'tab-active': key === conference,
                    }]}
                    href={`/${key}${isPlayoffs ? '/playoffs' : ''}`}
                >
                    {label}
                </a>
            );

        })}

    </div>

    <div>
        <label class="label text-sm">
            <input
                type="checkbox"
                class="toggle toggle-sm"
                checked={isPlayoffs}
                data-href={`/${conference}${isPlayoffs ? '' : '/playoffs'}`}
            />
            Show Playoff Teams
        </label>
        <script>
            document.querySelector('input[data-href]')?.addEventListener('change', (e) => {
                location.href = (e.currentTarget as HTMLInputElement).getAttribute('data-href') || '';
            });
        </script>
    </div>

    <ThemeToggle />

</div>

<div class="tab-panel w-full overflow-x-auto">
    {confStandings.map((team) => {
        teamCount++;

        const showWildCardDivider = isPlayoffs && teamCount === 6;
        const showNoPlayoffsDivider = isPlayoffs && teamCount === 8 || !isPlayoffs && teamCount === 2;

        return (
            <>
                <TeamCard team={team} />

                {showWildCardDivider && (
                    <Divider class="divider-accent">
                        Wild Card
                    </Divider>
                )}

                {showNoPlayoffsDivider && (
                    <Divider class="divider-error">
                        No Playoffs
                    </Divider>
                )}

            </>
        );
    })}
</div>